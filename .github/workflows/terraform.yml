name: 'Terraform'

on:
  push:
    branches:
      - main
      - initial-branch

jobs:
  prepare_s3:
    name: 'Prepare S3'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Create AWS Creds
      run: mkdir -p ~/.aws; echo "[default]" > ~/.aws/credentials; echo "aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials; echo "aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials; echo "[default]" > ~/.aws/config; echo "region = eu-central-1" >> ~/.aws/config; echo "output = json" >> ~/.aws/config

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: cd infra/s3; terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan -var="aws_region=${{ secrets.AWS_REGION }}" -var="vpc_block=${{ secrets.VPC_BLOCK }}" -var="subnet1_block=${{ secrets.SUBNET1_BLOCK }}" -var="subnet2_block=${{ secrets.SUBNET2_BLOCK }}" -var="app_db_name=${{ secrets.APP_DB_NAME }}" -var="app_db_user=${{ secrets.APP_DB_USER }}" -var="app_db_password=${{ secrets.APP_DB_PASSWORD }}" -var="app_name=${{ secrets.APP_NAME }}" -var="app_image=${{ secrets.APP_IMAGE }}" -var="service_name=${{ secrets.SERVICE_NAME }}" -out=tfplan
      continue-on-error: true

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push' || github.ref == 'refs/heads/initial-branch' && github.event_name == 'push'
      run: terraform apply -auto-approve -var="aws_region=${{ secrets.AWS_REGION }}" -var="vpc_block=${{ secrets.VPC_BLOCK }}" -var="subnet1_block=${{ secrets.SUBNET1_BLOCK }}" -var="subnet2_block=${{ secrets.SUBNET2_BLOCK }}" -var="app_db_name=${{ secrets.APP_DB_NAME }}" -var="app_db_user=${{ secrets.APP_DB_USER }}" -var="app_db_password=${{ secrets.APP_DB_PASSWORD }}" -var="app_name=${{ secrets.APP_NAME }}" -var="app_image=${{ secrets.APP_IMAGE }}" -var="service_name=${{ secrets.SERVICE_NAME }}" -input=tfplan; cd -

  solution_deployment:
    name: 'Solution Deployment'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Create AWS Creds
      run: mkdir -p ~/.aws; echo "[default]" > ~/.aws/credentials; echo "aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials; echo "aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials; echo "[default]" > ~/.aws/config; echo "region = eu-central-1" >> ~/.aws/config; echo "output = json" >> ~/.aws/config

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: cd infra/solution; terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan -var="aws_region=${{ secrets.AWS_REGION }}" -var="vpc_block=${{ secrets.VPC_BLOCK }}" -var="subnet1_block=${{ secrets.SUBNET1_BLOCK }}" -var="subnet2_block=${{ secrets.SUBNET2_BLOCK }}" -var="app_db_name=${{ secrets.APP_DB_NAME }}" -var="app_db_user=${{ secrets.APP_DB_USER }}" -var="app_db_password=${{ secrets.APP_DB_PASSWORD }}" -var="app_name=${{ secrets.APP_NAME }}" -var="app_image=${{ secrets.APP_IMAGE }}" -var="service_name=${{ secrets.SERVICE_NAME }}"
      continue-on-error: true

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push' || github.ref == 'refs/heads/initial-branch' && github.event_name == 'push'
      run: terraform apply -auto-approve -var="aws_region=${{ secrets.AWS_REGION }}" -var="vpc_block=${{ secrets.VPC_BLOCK }}" -var="subnet1_block=${{ secrets.SUBNET1_BLOCK }}" -var="subnet2_block=${{ secrets.SUBNET2_BLOCK }}" -var="app_db_name=${{ secrets.APP_DB_NAME }}" -var="app_db_user=${{ secrets.APP_DB_USER }}" -var="app_db_password=${{ secrets.APP_DB_PASSWORD }}" -var="app_name=${{ secrets.APP_NAME }}" -var="app_image=${{ secrets.APP_IMAGE }}" -var="service_name=${{ secrets.SERVICE_NAME }}"; cd -
